apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2022-04-23T12:32:02Z"
  labels:
    run: discord-alertmanager
  name: discord-alertmanager
  namespace: monitoring
  resourceVersion: "22555131"
  uid: 44a04db8-cfb0-4b56-beec-a9e3e8e6008c
spec:
  containers:
  - args:
    - —
    - labels=app=discord-alertmanager,owner=user
    - —
    - privileged=false
    - —
    - dry-run=client
    image: quay.io/werstatyw/alertmanager-discord:0.1.1
    imagePullPolicy: IfNotPresent
    name: discord-alertmanager
    ports:
    - containerPort: 9094
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-zsq52
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-zsq52
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  phase: Pending
  qosClass: BestEffort
